{"version":3,"sources":["App.js","serviceWorker.js","index.js","calculator.jsx"],"names":["App","react_default","a","createElement","className","calculator","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Calculator","_useState","useState","_useState2","Object","C_Users_SUDHIR_Desktop_reactDemo_react_tutorial_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","input","setInput","_useState3","_useState4","ans","setAns","takeInput","e","target","innerHTML","evalValue","eval","_unused","console","log","slice","useEffect","_unused2","react__WEBPACK_IMPORTED_MODULE_1___default","onClick"],"mappings":"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","file":"static/js/main.69c0a306.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Calculator } from \"./calculator\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Calculator /> \n       </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport const Calculator = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [ans, setAns] = useState(0);\r\n\r\n  function takeInput(e) {\r\n    //console.log(e.target);\r\n    if (e.target.innerHTML == \"=\" || e.target.innerHTML == \"back\") {\r\n      try {\r\n        let evalValue = eval(input);\r\n        setAns(evalValue);\r\n      } catch {\r\n        console.log(\"wrong \");\r\n      }\r\n    } else {\r\n      setInput(input + e.target.innerHTML);\r\n    }\r\n\r\n    if (e.target.innerHTML == \"back\") {\r\n      setInput(input.slice(0, -1));\r\n      console.log(\"from back\");\r\n    }\r\n\r\n    //console.log(e.target.innerHTML);\r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let evalValue = eval(input);\r\n      setAns(evalValue);\r\n    } catch {\r\n      console.log(\"wrong \");\r\n    }\r\n    //console.log('hihiihihi')\r\n    //console.log({input})\r\n  }, [input]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex\">\r\n        {\" \"}\r\n        <div className=\"input\">{input}</div>{\" \"}\r\n      </div>\r\n      <div className=\"flex\">\r\n        {\" \"}\r\n        <div className=\"ans\">{ans}</div>{\" \"}\r\n      </div>\r\n      <div className=\"flex\">\r\n        <button onClick={takeInput} className=\"btn\">\r\n          /\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          *\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn-big\">\r\n          back\r\n        </button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <button onClick={takeInput} className=\"btn\">\r\n          7\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          8\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          9\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <button onClick={takeInput} className=\"btn\">\r\n          4\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          5\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          6\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          +\r\n        </button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <button onClick={takeInput} className=\"btn\">\r\n          1\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          2\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          3\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn\">\r\n          .\r\n        </button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        <button onClick={takeInput} className=\"btn-big\">\r\n          0\r\n        </button>\r\n        <button onClick={takeInput} className=\"btn-big\">\r\n          =\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}